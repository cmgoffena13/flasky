"""empty message

Revision ID: 336788c3d4ff
Revises: 6af460a86097
Create Date: 2023-04-08 14:22:54.162164

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "336788c3d4ff"
down_revision = "6af460a86097"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("username", sa.VARCHAR(length=64), nullable=True),
        sa.Column("email", sa.VARCHAR(length=120), nullable=True),
        sa.Column("password_hash", sa.VARCHAR(length=128), nullable=True),
        sa.Column(
            "created_on",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("about_me", sa.VARCHAR(length=140), nullable=True),
        sa.Column(
            "last_seen",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("pk_users")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_users_username"), ["username"], unique=True
        )

    op.create_table(
        "followers",
        sa.Column("follower_id", sa.Integer(), nullable=True),
        sa.Column("followed_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["followed_id"],
            ["users.user_id"],
            name=op.f("fk_followers_followed_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["follower_id"],
            ["users.user_id"],
            name=op.f("fk_followers_follower_id_users"),
        ),
    )
    op.create_table(
        "posts",
        sa.Column("post_id", sa.INTEGER(), nullable=False),
        sa.Column("body", sa.VARCHAR(length=4000), nullable=True),
        sa.Column(
            "timestamp",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.user_id"], name=op.f("fk_posts_user_id_users")
        ),
        sa.PrimaryKeyConstraint("post_id", name=op.f("pk_posts")),
    )
    with op.batch_alter_table("posts", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_posts_timestamp"), ["timestamp"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("posts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_posts_timestamp"))

    op.drop_table("posts")
    op.drop_table("followers")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))
        batch_op.drop_index(batch_op.f("ix_users_email"))

    op.drop_table("users")
    # ### end Alembic commands ###
